apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: discourse-postgres
  namespace: discourse
  labels:
    app: discourse
    component: postgres
spec:
  template:
    metadata:
      labels:
        app: discourse
        component: postgres
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "remove-lost-found",
                "image": "busybox:1.25.0",
                "imagePullPolicy": "IfNotPresent",
                "command": ["rm", "-fr", "/var/lib/postgresql/data/pgdata/lost+found"],
                "volumeMounts": [
                    {
                        "name": "postgres-data",
                        "mountPath": "/var/lib/postgresql/data"
                    }
                ]
            }
        ]'
        scheduler.alpha.kubernetes.io/affinity: >
          {
            "nodeAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": {
                "nodeSelectorTerms": [
                  {
                    "matchExpressions": [
                      {
                        "key": "affinity/discourse",
                        "operator": "In",
                        "values": ["true"]
                      }
                    ]
                  }
                ]
              }
            }
          }
    spec:
      containers:
      - name: discourse-postgres
        image: postgres:9.5.4
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_USER
          value: discourse
        #   # Required for pg_isready in the health probes.
        # - name: PGUSER
        #   value: {{ default "postgres" .Values.postgresUser | quote }}
        # - name: POSTGRES_DB
        #   value: discourse
        # - name: PGDATA
        #   value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          value: discourse
        # - name: POSTGRES_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: {{ template "fullname" . }}
        #       key: postgres-password
        ports:
        - name: postgresql
          containerPort: 5432
        # livenessProbe:
        #   exec:
        #     command:
        #     - pg_isready
        #   initialDelaySeconds: 60
        #   timeoutSeconds: 3
        # readinessProbe:
        #   exec:
        #     command:
        #     - pg_isready
        #   initialDelaySeconds: 60
        #   timeoutSeconds: 3
#         resources:
# {{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        hostPath:
          path: /srv/discourse/discourse-postgres-data
